
#GitFlow CICD Pipeline
trigger:
    branches:
        include:
        - main
        - deploy/*

        exclude:
        - hotfix/*
    batch: true

#Build CI
stages:
- stage: Build
  jobs:
  - job: CIJob
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Build Job'
    steps:
    - template: '/Build/build-pipeline.yml'   ##Reference Build Pipeline as Template with parameter passed as 'debug'
      parameters:
          buildConfig: 'debug'
    - template: '/Build/build-pipeline.yml'   ##Reference Build Pipeline as Template with parameter passed as 'release'
      parameters:
          buildConfig: 'release'
    
    - task: PublishBuildArtifacts@1         ##Artifact Publish
      displayName: 'Publish Artifact Task'
      inputs:
        ArtifactName: 'depo'
        PathtoPublish: '$(build.artifactsstaging)'
        

#Approval Check
- stage: Checks
  dependsOn: Build
  pool: server
  jobs:
  - job: Validation
    steps:
    - task: ManualValidation@1
      displayName: 'Need Approval'
      inputs:
        notifyUsers: |
          310538-PA7@deccansoftstudents.onmicrosoft.com
          1728233@kiit.ac.in
        instructions: '1728233@kiit.ac.in'


##CD to Azure Environment
- stage: Azure
  dependsOn: Checks
  condition: eq(variables['Build.SourceBranch'],'refs/heads/deploy/azure')    #Activated for 'deploy/azure' branch only 
  jobs:
  - deployment: deployToAzureVM
    #dependsOn: AzureWebApp
    environment:                        #Deployment Job to Azure VM in 'Hybrid-Pools'
      name: Hybrid-Pools
      resourceType: VirtualMachine
      tags: azure                     #Explicite tagName provided for site deployment to particular deploy agent among others
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: 'none'    #Diabled Artifact download in Environment
            - task: DownloadPipelineArtifact@2                ##Explicit Artifact Download for Azure VM
              displayName: 'download artifact for AzureVM'
              inputs:
                buildType: 'current'
                artifactName: 'depo'
                targetPath: '$(Pipeline.Workspace)/downloadedFiles'
          # - task: IISWebAppManagementOnMachineGroup@0         #IIS Install
          #   displayName: 'IIS installation task'
          #   inputs:
          #     EnableIIS: true
          #     IISDeploymentType: 'IISWebsite'
          #     ActionIISWebsite: 'CreateOrUpdateWebsite'
          #     WebsiteName: 'Default Web Site'
          #     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
          #     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
          #     AddBinding: true
          #     ParentWebsiteNameForApplication: 'Default Web Site'
          #     ParentWebsiteNameForVD: 'Default Web Site'
          #     Bindings: '{
          #       "bindings":[
          #         {
          #           "protocol": "http",
          #           "ipAddress": "All Unassigned",
          #           "port": "80",
          #           "hostname": "",
          #           "sslThumbprint": "",
          #           "sniFlag": false
          #         }
          #       ]
          #     }'
            - task: PowerShell@2                #Download & Install ASP.NET using pwsh script
              displayName: 'ASP.NET Script task'
              inputs:
                targetType: 'inline'
                script: |
                  Invoke-WebRequest "https://download.visualstudio.microsoft.com/download/pr/7d169ca8-2755-4870-b45c-bfc651013a77/46639ef8e327f00ab1a941288dd28abe/dotnet-hosting-8.0.7-win.exe" -OutFile $env:temp\DotNetCore.WindowsHosting.exe
                  Start-Process $env:temp\DotNetCore.WindowsHosting.exe -ArgumentList '/quiet' -Wait
                errorActionPreference: 'silentlyContinue'

            - task: IISWebAppDeploymentOnMachineGroup@0     ##Site Deploy to IIS using Artifact downloaded by Environment
              displayName: 'Deploy Website in IIS server'
              inputs:
                WebSiteName: 'Default Web Site'
                Package: '$(pipeline.workspace)/downloadedFiles/**/release/*.zip'
                XmlVariableSubstitution: true


  # - job: AzureWebApp
  #   steps:
  #   - task: DownloadPipelineArtifact@2
  #     inputs:
  #       buildType: 'current'
  #       artifactName: 'depo'
  #       targetPath: '$(Pipeline.Workspace)'

  #   - task: AzureRmWebAppDeployment@4                           ##Site Deploy to Azure WebApp
  #     displayName: 'Hosting Website to webapp from Artifact'
  #     inputs:
  #       ConnectionType: 'AzureRM'
  #       azureSubscription: 'Lifeline233-SP'
  #       appType: 'webApp'
  #       WebAppName: 'hybrid-appwxgv3fplmjtiq'
  #       packageForLinux: '$(Pipeline.Workspace)/**/release/*.zip'


- stage: AWS
  dependsOn: Checks
  condition: eq(variables['Build.SourceBranch'],'refs/heads/deploy/aws')      #Activated for 'deploy/aws' branch only
  jobs:
  - deployment: deployToawsVM
    environment:
      name: Hybrid-Pools            #Deployment Job to AWS VM in 'Hybrid-Pools'
      resourceType: VirtualMachine
      tags: aws                         #Explicite tagName provided for site deployment to particular deploy agent among others
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: 'none'
          # - task: IISWebAppManagementOnMachineGroup@0         #IIS Install
          #   displayName: 'IIS installation task'
          #   inputs:
          #     EnableIIS: true
          #     IISDeploymentType: 'IISWebsite'
          #     ActionIISWebsite: 'CreateOrUpdateWebsite'
          #     WebsiteName: 'Default Web Site'
          #     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
          #     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
          #     AddBinding: true
          #     ParentWebsiteNameForApplication: 'Default Web Site'
          #     ParentWebsiteNameForVD: 'Default Web Site'
          #     Bindings: '{
          #       "bindings":[
          #         {
          #           "protocol": "http",
          #           "ipAddress": "All Unassigned",
          #           "port": "80",
          #           "hostname": "",
          #           "sslThumbprint": "",
          #           "sniFlag": false
          #         }
          #       ]
          #     }'
          - task: PowerShell@2                #Download & Install ASP.NET using pwsh script
            displayName: 'ASP.NET Script task'
            inputs:
              targetType: 'inline'
              script: |
                Invoke-WebRequest "https://download.visualstudio.microsoft.com/download/pr/7d169ca8-2755-4870-b45c-bfc651013a77/46639ef8e327f00ab1a941288dd28abe/dotnet-hosting-8.0.7-win.exe" -OutFile $env:temp\DotNetCore.WindowsHosting.exe
                Start-Process $env:temp\DotNetCore.WindowsHosting.exe -ArgumentList '/quiet' -Wait
              errorActionPreference: 'silentlyContinue'
      

          - task: IISWebAppDeploymentOnMachineGroup@0     ##Site Deploy to IIS using Artifact downloaded by Environment
            displayName: 'Deploy Website in IIS server'
            inputs:
              WebSiteName: 'Default Web Site'
              Package: '$(pipeline.workspace)/**/release/*.zip'
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true
    
- stage: onPrem
  dependsOn: Checks
  condition: eq(variables['Build.SourceBranch'],'refs/heads/deploy/onprem')       #Activated for 'deploy/onprem' branch only
  jobs:
  - deployment: deploytoOnprem
    environment:
      name: Hybrid-Pools
      resourceType: VirtualMachine
      tags: onprem-adc              #Explicit tagName provided for site deployment to particular deploy agent among others
    strategy:
      runOnce:
        deploy:
         steps:
          - checkout: 'none'
          # - task: IISWebAppManagementOnMachineGroup@0         #IIS Install
          #   displayName: 'IIS installation task'
          #   inputs:
          #     EnableIIS: true
          #     IISDeploymentType: 'IISWebsite'
          #     ActionIISWebsite: 'CreateOrUpdateWebsite'
          #     WebsiteName: 'Default Web Site'
          #     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
          #     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
          #     AddBinding: true
          #     ParentWebsiteNameForApplication: 'Default Web Site'
          #     ParentWebsiteNameForVD: 'Default Web Site'
          #     Bindings: '{
          #       "bindings":[
          #         {
          #           "protocol": "http",
          #           "ipAddress": "All Unassigned",
          #           "port": "80",
          #           "hostname": "",
          #           "sslThumbprint": "",
          #           "sniFlag": false
          #         }
          #       ]
          #     }'
          - task: PowerShell@2                #Download & Install ASP.NET using pwsh script
            displayName: 'ASP.NET Script task'
            inputs:
              targetType: 'inline'
              script: |
                Invoke-WebRequest "https://download.visualstudio.microsoft.com/download/pr/7d169ca8-2755-4870-b45c-bfc651013a77/46639ef8e327f00ab1a941288dd28abe/dotnet-hosting-8.0.7-win.exe" -OutFile $env:temp\DotNetCore.WindowsHosting.exe
                Start-Process $env:temp\DotNetCore.WindowsHosting.exe -ArgumentList '/quiet' -Wait
              errorActionPreference: 'silentlyContinue'
          

          - task: IISWebAppDeploymentOnMachineGroup@0     ##Site Deploy to IIS using Artifact downloaded by Environment
            displayName: 'Deploy Website in IIS server'
            inputs:
              WebSiteName: 'Default Web Site'
              Package: '$(pipeline.workspace)/**/release/*.zip'
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true 
        
    
    


